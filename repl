#!/usr/bin/python3 -u

import argparse
import shlex
import sys
import subprocess
import os


def fcomplete(text, state):
    text = os.path.expanduser(text)
    head, tail = os.path.split(text)

    search_dir = os.path.join('.', head)
    candidates = [s for s in os.listdir(search_dir) if s.startswith(tail)]

    if state >= len(candidates):
        return None

    if len(candidates) == 1:
        fn = os.path.join(head, candidates[0])
        if not os.path.isdir(fn):
            return fn + ' '
        return fn + '/'

    return os.path.join(head, candidates[state])


def colorize(sequence, text, end="00"):
    return "\033[{}m{}\033[{}m" .format(sequence, text, end)


def replace_slice(placeholder, replacement, l, append=False):
    rv = []
    found = False
    for elem in l:
        if elem == placeholder:
            rv.extend(replacement)
            found = True
            continue
        rv.append(elem)

    if not found and append:
        rv.extend(replacement)

    return rv


try:
    import readline
    import xdg.BaseDirectory
except ImportError:
    pass  # no readline or xdg support
else:
    import atexit

    conf = xdg.BaseDirectory.save_config_path('repl')
    histfile = os.path.join(conf, 'history')

    try:
        readline.read_history_file(histfile)
    except IOError:
        pass

    atexit.register(readline.write_history_file, histfile)
    readline.parse_and_bind('tab: complete')
    readline.set_completer_delims(' \t\n')
    readline.set_completer(fcomplete)


parser = argparse.ArgumentParser()
parser.add_argument('command', nargs=argparse.REMAINDER)
parser.add_argument('--no-color', default=False, action='store_true',
                    help='do not colorized prompt.')
parser.add_argument('--prompt', help='override prompt')
parser.add_argument('--sub', default='{}',
                    help='argument to replace with whatever is entered on the '
                         'REPL. use --sub= to disable substitution')
args = parser.parse_args()


if args.prompt:
    prompt = args.prompt
elif args.no_color:
    prompt = ' '.join(args.command) + '>> '
else:
    color = '34'
    prompt = (colorize('1;' + color, ' '.join(args.command)) +
              colorize('0;' + color, '>> '))


while True:
    try:
        uargs = shlex.split(input(prompt))
    except EOFError:
        sys.exit(0)
    except ValueError as e:
        print(e)
        continue

    # substitute values
    cmd = replace_slice(args.sub, uargs, args.command, append=True)

    subprocess.call(cmd)
